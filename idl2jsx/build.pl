#!/usr/bin/env perl
use 5.10.0;
use strict;
use warnings;
use Text::Xslate;
use File::Path qw(mkpath);
use Data::Section::Simple;
use Fatal qw(open close);
use File::Basename qw(dirname);
use Storable qw(lock_retrieve);
use Tie::IxHash;
use String::ShellQuote;

my $lib = "lib";
mkpath $lib;

# the order is important!

my $root = dirname(__FILE__);
unlink "$root/.idl2jsx.bin";

# NOTE: some specs are varying, so we specify the published date.

my @specs = (
    ['chromeapps_reference.jsx' =>
        'alarm; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/alarms.idl',
        'app.runtime; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/app_runtime.idl',
        'app.window; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/app_window.idl',
        'audio; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/audio.idl',
        'bluetooth; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/bluetooth.idl',
        'contextMenus; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/context_menus.json',
        'events; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/events.json',
        'fileSystem; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/file_system.idl',
        'i18n; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/i18n.json',
        'identity; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/identity.idl',
        'idle; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/idle.json',
        'location; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/location.idl',
        'mediaGalleries; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/media_galleries.idl',
        'notifications; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/notifications.idl',
        'permissions; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/permissions.json',
        'power; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/power.idl',
        'pushMessaging; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/push_messaging.idl',
        'runtime; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/runtime.json',
        'serial; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/serial.idl',
        'socket; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/socket.idl',
        'sockets_udp; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/sockets_udp.idl',
        'storage; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/storage.json',
        'syncFileSystem; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/sync_file_system.idl',
        'system.cpu; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/system_cpu.idl',
        'system.display; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/system_display.idl',
        'system.memory; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/system_memory.idl',
        'system.usage; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/system_storage.idl',
        'tts; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/tts.json',
        'types; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/types.json',
        'usb; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/usb.idl',

        'tabs; http://src.chromium.org/svn/trunk/src/chrome/common/extensions/api/tabs.json',


    ],
);

my $HEADER = <<'T';
// THIS FILE IS AUTOMATICALLY GENERATED.
T

my $xslate = Text::Xslate->new(
    path  => [ Data::Section::Simple->new->get_data_section() ],
    type => "text",

    function => {
    },
);

foreach my $spec(@specs) {
    my($file, @idls) = @{$spec};
    say "generate $file from ", join ",", @idls;

    my $args = shell_quote(@idls);
    my %param = (
        idl => scalar(`idl2jsx/idl2jsx.pl --refresh-specs --continuous $args`),
    );
    if($? != 0) {
        die "Cannot convert @idls to JSX.\n";
    }

    $param{classdef} = lock_retrieve("$root/.idl2jsx.bin");
    $param{html_elements} = [
        map  {
            ($_->{func_name} = $_->{name}) =~ s/^HTML//;
            my $tag_name = lc $_->{func_name};
            $tag_name =~ s/element$//;
            $_->{tag_name} = $tag_name;
            $_; }
        grep { $_->{base} ~~ "HTMLElement"  } values %{ $param{classdef} },
    ];

    my $src = $xslate->render($file, \%param);

    open my($fh), ">", "$lib/$file";
    print $fh $HEADER;
    print $fh $src;
    close $fh;
}

__DATA__
@@ chromeapps.jsx
/***
 * Web browser interface for JSX, generated directly from W3C specifications written in WebIDL
 *
 * @author DeNA, Co., Ltd.
 * @see http://www.w3.org/
 */
import "js/web.jsx";


: $idl

