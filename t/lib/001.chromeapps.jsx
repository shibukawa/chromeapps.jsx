// THIS FILE IS AUTOMATICALLY GENERATED.
// DON'T EDIT THIS FILE. EDIT jsx2idl/maketest.pl INSTEAD.

import "test-case.jsx";
import "js/web.jsx";
import "lib/chromeapps.jsx";

class _Test extends TestCase {

    function compile_Alarm(o : Alarm) : void {
        var v1 : string/*DOMString*/ = o.name;
        var v2 : number/*double*/ = o.scheduledTime;
        var v3 : Nullable.<number>/*double?*/ = o.periodInMinutes;
    } // Alarm

    function compile_AlarmCreateInfo(o : AlarmCreateInfo) : void {
        var v1 : Nullable.<number>/*double?*/ = o.when;
        var v2 : Nullable.<number>/*double?*/ = o.delayInMinutes;
        var v3 : Nullable.<number>/*double?*/ = o.periodInMinutes;
    } // AlarmCreateInfo

    function compile_Functions(o : Functions) : void {
        Functions.create(X.getstring(), X.getAlarmCreateInfo());
        Functions.get(X.getstring(), X.getfunction_alarm_Alarm__void());
        Functions.getAll(X.getfunction_alarms_Alarm____void());
        Functions.clear();
        Functions.clear(X.getstring());
        Functions.clearAll();
        Functions.create(X.getstring());
        Functions.create(X.getstring(), X.getCreateWindowOptions());
        Functions.create(X.getstring(), X.getCreateWindowOptions(), X.getfunction_created_window_Object__void());
        var f1 : AppWindow = Functions.current();
        Functions.initializeAppWindow(X.getObject());
        Functions.getInfo(X.getfunction_outputInfo_OutputDeviceInfo___inputInfo_InputDeviceInfo____void());
        Functions.setActiveDevices(X.getstring__(), X.getfunction___void());
        Functions.setProperties(X.getstring(), X.getDeviceProperties(), X.getfunction___void());
        Functions.addProfile(X.getProfile(), X.getfunction___void());
        Functions.removeProfile(X.getProfile(), X.getfunction___void());
        Functions.getAdapterState(X.getfunction_result_AdapterState__void());
        Functions.getDevices(X.getGetDevicesOptions(), X.getfunction___void());
        Functions.getProfiles(X.getGetProfilesOptions(), X.getfunction_result_Profile____void());
        Functions.getServices(X.getGetServicesOptions(), X.getfunction_result_ServiceRecord____void());
        Functions.connect(X.getConnectOptions(), X.getfunction___void());
        Functions.disconnect(X.getDisconnectOptions());
        Functions.disconnect(X.getDisconnectOptions(), X.getfunction___void());
        Functions.read(X.getReadOptions(), X.getfunction_result_ArrayBuffer__void());
        Functions.write(X.getWriteOptions());
        Functions.write(X.getWriteOptions(), X.getfunction_result_number__void());
        Functions.getLocalOutOfBandPairingData(X.getfunction_data_OutOfBandPairingData__void());
        Functions.setOutOfBandPairingData(X.getSetOutOfBandPairingDataOptions());
        Functions.setOutOfBandPairingData(X.getSetOutOfBandPairingDataOptions(), X.getfunction___void());
        Functions.startDiscovery(X.getStartDiscoveryOptions());
        Functions.startDiscovery(X.getStartDiscoveryOptions(), X.getfunction___void());
        Functions.stopDiscovery();
        Functions.stopDiscovery(X.getfunction___void());
        var f2 : variant/*(integer or string)*/ = Functions.create(X.getObject());
        var f3 : variant/*(integer or string)*/ = Functions.create(X.getObject(), X.getfunction___void());
        Functions.update(X.getinteger(), X.getObject());
        Functions.update(X.getinteger(), X.getObject(), X.getfunction___void());
        Functions.update(X.getstring(), X.getObject());
        Functions.update(X.getstring(), X.getObject(), X.getfunction___void());
        Functions.remove(X.getinteger());
        Functions.remove(X.getinteger(), X.getfunction___void());
        Functions.remove(X.getstring());
        Functions.remove(X.getstring(), X.getfunction___void());
        Functions.removeAll();
        Functions.removeAll(X.getfunction___void());
        Functions.getDisplayPath(X.getObject(), X.getfunction_displayPath_string__void());
        Functions.getWritableEntry(X.getObject(), X.getfunction_entry_Object__void());
        Functions.isWritableEntry(X.getObject(), X.getfunction_isWritable_boolean__void());
        Functions.chooseEntry(X.getChooseEntryOptions(), X.getfunction_entry_Object_fileEntries_Object____void());
        Functions.restoreEntry(X.getstring(), X.getfunction_entry_Object__void());
        Functions.isRestorable(X.getstring(), X.getfunction_isRestorable_boolean__void());
        var f4 : string/*DOMString*/ = Functions.retainEntry(X.getObject());
        Functions.getAcceptLanguages(X.getfunction_languages_array__void());
        var f5 : string = Functions.getMessage(X.getstring());
        var f6 : string = Functions.getMessage(X.getstring(), X.getvariant());
        Functions.getAuthToken(X.getTokenDetails(), X.getfunction_token_string__void());
        Functions.removeCachedAuthToken(X.getInvalidTokenDetails(), X.getfunction___void());
        Functions.launchWebAuthFlow(X.getWebAuthFlowDetails(), X.getfunction_responseUrl_string__void());
        Functions.queryState(X.getinteger(), X.getfunction_newState_string__void());
        Functions.setDetectionInterval(X.getinteger());
        Functions.watchLocation(X.getstring(), X.getWatchLocationRequestInfo());
        Functions.clearWatch(X.getstring());
        Functions.getMediaFileSystems(X.getMediaFileSystemsDetails(), X.getfunction_mediaFileSystems_Object____void());
        var f7 : MediaFileSystemMetadata = Functions.getMediaFileSystemMetadata(X.getObject());
        Functions.create(X.getstring(), X.getNotificationOptions(), X.getfunction_notificationId_string__void());
        Functions.update(X.getstring(), X.getNotificationOptions(), X.getfunction_wasUpdated_boolean__void());
        Functions.clear(X.getstring(), X.getfunction_wasCleared_boolean__void());
        Functions.getAll(X.getfunction_notifications_Object__void());
        Functions.getAll(X.getfunction_permissions_Permissions__void());
        Functions.contains(X.getPermissions(), X.getfunction_removed_boolean__void());
        Functions.request(X.getPermissions());
        Functions.request(X.getPermissions(), X.getfunction_removed_boolean__void());
        Functions.remove(X.getPermissions());
        Functions.remove(X.getPermissions(), X.getfunction_removed_boolean__void());
        Functions.requestKeepAwake(X.getLevel());
        Functions.releaseKeepAwake();
        Functions.getChannelId(X.getboolean(), X.getfunction_channelId_ChannelIdResult__void());
        Functions.getBackgroundPage(X.getfunction_directoryEntry_Object__void());
        var f8 : Object/*object*/ = Functions.getManifest();
        var f9 : string = Functions.getURL(X.getstring());
        Functions.setUninstallUrl(X.getstring());
        Functions.reload();
        Functions.requestUpdateCheck(X.getfunction_status_string_details_Object__void());
        var f10 : Port = Functions.connect();
        var f11 : Port = Functions.connect(X.getstring());
        var f12 : Port = Functions.connect(X.getstring(), X.getObject());
        var f13 : Port = Functions.connectNative(X.getstring());
        Functions.sendMessage(X.getstring(), X.getvariant());
        Functions.sendMessage(X.getstring(), X.getvariant(), X.getfunction_response_variant__void());
        Functions.sendNativeMessage(X.getstring(), X.getObject());
        Functions.sendNativeMessage(X.getstring(), X.getObject(), X.getfunction_response_variant__void());
        Functions.getPlatformInfo(X.getfunction_directoryEntry_Object__void());
        Functions.getPackageDirectoryEntry(X.getfunction_directoryEntry_Object__void());
        Functions.getPorts(X.getfunction_ports_string____void());
        Functions.open(X.getstring(), X.getOpenOptions(), X.getfunction_openInfo_OpenInfo__void());
        Functions.close(X.getnumber(), X.getfunction_result_boolean__void());
        Functions.read(X.getnumber(), X.getnumber(), X.getfunction_readInfo_ReadInfo__void());
        Functions.write(X.getnumber(), X.getArrayBuffer(), X.getfunction_writeInfo_WriteInfo__void());
        Functions.flush(X.getnumber(), X.getfunction_result_boolean__void());
        Functions.getControlSignals(X.getnumber(), X.getfunction_options_ControlSignalOptions__void());
        Functions.setControlSignals(X.getnumber(), X.getControlSignalOptions(), X.getfunction_result_boolean__void());
        Functions.create(X.getstring(), X.getCreateOptions(), X.getfunction_notificationId_string__void());
        Functions.destroy(X.getnumber());
        Functions.connect(X.getnumber(), X.getstring(), X.getnumber(), X.getfunction_result_number__void());
        Functions.bind(X.getnumber(), X.getstring(), X.getnumber(), X.getfunction_result_number__void());
        Functions.disconnect(X.getnumber());
        Functions.read(X.getnumber(), X.getnumber(), X.getfunction_readInfo_ReadInfo__void());
        Functions.write(X.getnumber(), X.getArrayBuffer(), X.getfunction_writeInfo_WriteInfo__void());
        Functions.recvFrom(X.getnumber(), X.getnumber(), X.getfunction_recvFromInfo_RecvFromInfo__void());
        Functions.sendTo(X.getnumber(), X.getArrayBuffer(), X.getstring(), X.getnumber(), X.getfunction_writeInfo_WriteInfo__void());
        Functions.listen(X.getnumber(), X.getstring(), X.getnumber(), X.getnumber(), X.getfunction_result_number__void());
        Functions.accept(X.getnumber(), X.getfunction_acceptInfo_AcceptInfo__void());
        Functions.setKeepAlive(X.getnumber(), X.getboolean(), X.getnumber(), X.getfunction_result_boolean__void());
        Functions.setNoDelay(X.getnumber(), X.getboolean(), X.getfunction_result_boolean__void());
        Functions.getInfo(X.getnumber(), X.getfunction_outputInfo_OutputDeviceInfo___inputInfo_InputDeviceInfo____void());
        Functions.getNetworkList(X.getfunction_result_NetworkInterface____void());
        Functions.joinGroup(X.getnumber(), X.getstring(), X.getfunction_result_number__void());
        Functions.leaveGroup(X.getnumber(), X.getstring(), X.getfunction_result_number__void());
        Functions.setMulticastTimeToLive(X.getnumber(), X.getnumber(), X.getfunction_result_number__void());
        Functions.setMulticastLoopbackMode(X.getnumber(), X.getboolean(), X.getfunction_result_number__void());
        Functions.getJoinedGroups(X.getnumber(), X.getfunction_groups_string____void());
        Functions.create(X.getSocketProperties(), X.getfunction_notificationId_string__void());
        Functions.update(X.getnumber(), X.getSocketProperties(), X.getfunction_wasUpdated_boolean__void());
        Functions.send(X.getnumber(), X.getArrayBuffer(), X.getstring(), X.getnumber(), X.getfunction_sendInfo_SendInfo__void());
        Functions.close(X.getnumber());
        Functions.close(X.getnumber(), X.getfunction_result_boolean__void());
        Functions.getSockets(X.getfunction_socketInfos_SocketInfo____void());
        Functions.requestFileSystem(X.getfunction_fileSystem_Object__void());
        Functions.setConflictResolutionPolicy(X.getstring());
        Functions.setConflictResolutionPolicy(X.getstring(), X.getfunction___void());
        Functions.getConflictResolutionPolicy(X.getfunction_policy_string__void());
        Functions.getUsageAndQuota(X.getObject(), X.getfunction_info_StorageInfo__void());
        Functions.getFileStatus(X.getObject(), X.getfunction_status_string__void());
        Functions.getFileStatuses(X.getObject__(), X.getfunction_status_FileStatusInfo____void());
        Functions.getServiceStatus(X.getfunction_status_string__void());
        Functions.getInfo(X.getfunction_info_CpuInfo__void());
        Functions.getInfo(X.getfunction_displayInfo_DisplayUnitInfo____void());
        Functions.setDisplayProperties(X.getstring(), X.getDisplayProperties());
        Functions.setDisplayProperties(X.getstring(), X.getDisplayProperties(), X.getfunction___void());
        Functions.getInfo(X.getfunction_info_MemoryInfo__void());
        Functions.getInfo(X.getfunction_info_StorageUnitInfo____void());
        Functions.ejectDevice(X.getstring(), X.getfunction_result_EjectDeviceResultCode__void());
        Functions.speak(X.getstring());
        Functions.speak(X.getstring(), X.getObject());
        Functions.speak(X.getstring(), X.getObject(), X.getfunction___void());
        Functions.stop();
        Functions.pause();
        Functions.resume();
        Functions.isSpeaking();
        Functions.isSpeaking(X.getfunction_removed_boolean__void());
        Functions.getVoices();
        Functions.getVoices(X.getfunction_languages_array__void());
        Functions.getDevices(X.getEnumerateDevicesOptions(), X.getfunction_devices_Device____void());
        Functions.requestAccess(X.getDevice(), X.getnumber(), X.getfunction_sucess_boolean__void());
        Functions.openDevice(X.getDevice(), X.getfunction_handle_ConnectionHandle__void());
        Functions.findDevices(X.getEnumerateDevicesAndRequestAccessOptions(), X.getfunction_handles_ConnectionHandle____void());
        Functions.closeDevice(X.getConnectionHandle());
        Functions.closeDevice(X.getConnectionHandle(), X.getfunction___void());
        Functions.listInterfaces(X.getConnectionHandle(), X.getfunction_descriptors_InterfaceDescriptor____void());
        Functions.claimInterface(X.getConnectionHandle(), X.getnumber(), X.getfunction___void());
        Functions.releaseInterface(X.getConnectionHandle(), X.getnumber(), X.getfunction___void());
        Functions.setInterfaceAlternateSetting(X.getConnectionHandle(), X.getnumber(), X.getnumber(), X.getfunction___void());
        Functions.controlTransfer(X.getConnectionHandle(), X.getControlTransferInfo(), X.getfunction_info_TransferResultInfo__void());
        Functions.bulkTransfer(X.getConnectionHandle(), X.getGenericTransferInfo(), X.getfunction_info_TransferResultInfo__void());
        Functions.interruptTransfer(X.getConnectionHandle(), X.getGenericTransferInfo(), X.getfunction_info_TransferResultInfo__void());
        Functions.isochronousTransfer(X.getConnectionHandle(), X.getIsochronousTransferInfo(), X.getfunction_info_TransferResultInfo__void());
        Functions.resetDevice(X.getConnectionHandle(), X.getfunction_result_boolean__void());
    } // Functions

    function compile_Events(o : Events) : void {
        Events.onAlarm(X.getAlarm());
        Events.onLaunched();
        Events.onLaunched(X.getLaunchData());
        Events.onRestarted();
        Events.onBoundsChanged();
        Events.onClosed();
        Events.onFullscreened();
        Events.onMaximized();
        Events.onMinimized();
        Events.onRestored();
        Events.onDeviceChanged();
        Events.onAdapterStateChanged(X.getAdapterState());
        Events.onConnection(X.getSocket());
        Events.onClicked(X.getOnClickData(), X.getoptional());
        Events.onStateChanged(X.getstring());
        Events.onLocationUpdate(X.getLocation());
        Events.onLocationError(X.getstring());
        Events.onClosed(X.getstring(), X.getboolean());
        Events.onClicked(X.getstring());
        Events.onButtonClicked(X.getstring(), X.getnumber());
        Events.onAdded(X.getPermissions());
        Events.onRemoved(X.getPermissions());
        Events.onMessage(X.getMessage());
        Events.onStartup();
        Events.onInstalled(X.getObject());
        Events.onSuspend();
        Events.onSuspendCanceled();
        Events.onUpdateAvailable(X.getObject());
        Events.onBrowserUpdateAvailable();
        Events.onConnect(X.getPort());
        Events.onConnectExternal(X.getPort());
        var f1 : boolean = Events.onMessage(X.getvariant(), X.getMessageSender(), X.getfunction___void());
        var f2 : boolean = Events.onMessageExternal(X.getvariant(), X.getMessageSender(), X.getfunction___void());
        Events.onRestartRequired(X.getstring());
        Events.onReceive(X.getReceiveInfo());
        Events.onReceiveError(X.getReceiveErrorInfo());
        Events.onChanged(X.getObject(), X.getstring());
        Events.onServiceStatusChanged(X.getServiceInfo());
        Events.onFileStatusChanged(X.getFileInfo());
        Events.onDisplayChanged();
        Events.onAttached(X.getStorageUnitInfo());
        Events.onDetached(X.getstring());
        Events.onEvent(X.getTtsEvent());
        Events.onCreated(X.getTab());
        Events.onUpdated(X.getinteger(), X.getObject(), X.getTab());
        Events.onMoved(X.getinteger(), X.getObject());
        Events.onSelectionChanged(X.getinteger(), X.getObject());
        Events.onActiveChanged(X.getinteger(), X.getObject());
        Events.onActivated(X.getObject());
        Events.onHighlightChanged(X.getObject());
        Events.onHighlighted(X.getObject());
        Events.onDetached(X.getinteger(), X.getObject());
        Events.onAttached(X.getinteger(), X.getObject());
        Events.onRemoved(X.getinteger(), X.getObject());
        Events.onReplaced(X.getinteger(), X.getinteger());
    } // Events

    function compile_LaunchItem(o : LaunchItem) : void {
        var v1 : Object/*object*/ = o.entry;
        var v2 : string/*DOMString*/ = o.type;
    } // LaunchItem

    function compile_LaunchData(o : LaunchData) : void {
        var v1 : Nullable.<string>/*DOMString?*/ = o.id;
        var v2 : Nullable.<LaunchItem[]> = o.items;
    } // LaunchData

    function compile_Bounds(o : Bounds) : void {
        var v1 : Nullable.<number>/*long?*/ = o.left;
        var v2 : Nullable.<number>/*long?*/ = o.top;
        var v3 : Nullable.<number>/*long?*/ = o.width;
        var v4 : Nullable.<number>/*long?*/ = o.height;
        var v5 : number/*long*/ = o.left;
        var v6 : number/*long*/ = o.top;
        var v7 : number/*long*/ = o.width;
        var v8 : number/*long*/ = o.height;
    } // Bounds

    function compile_CreateWindowOptions(o : CreateWindowOptions) : void {
        var v1 : Nullable.<string>/*DOMString?*/ = o.id;
        var v2 : Nullable.<number>/*long?*/ = o.defaultWidth;
        var v3 : Nullable.<number>/*long?*/ = o.defaultHeight;
        var v4 : Nullable.<number>/*long?*/ = o.defaultLeft;
        var v5 : Nullable.<number>/*long?*/ = o.defaultTop;
        var v6 : Nullable.<number>/*long?*/ = o.width;
        var v7 : Nullable.<number>/*long?*/ = o.height;
        var v8 : Nullable.<number>/*long?*/ = o.left;
        var v9 : Nullable.<number>/*long?*/ = o.top;
        var v10 : Nullable.<number>/*long?*/ = o.minWidth;
        var v11 : Nullable.<number>/*long?*/ = o.minHeight;
        var v12 : Nullable.<number>/*long?*/ = o.maxWidth;
        var v13 : Nullable.<number>/*long?*/ = o.maxHeight;
        var v14 : Nullable.<WindowType> = o.type;
        var v15 : Nullable.<string>/*DOMString?*/ = o.frame;
        var v16 : Nullable.<Bounds> = o.bounds;
        var v17 : Nullable.<boolean> = o.transparentBackground;
        var v18 : Nullable.<string>/*State?*/ = o.state;
        var v19 : Nullable.<boolean> = o.hidden;
        var v20 : Nullable.<boolean> = o.resizable;
        var v21 : Nullable.<boolean> = o.singleton;
    } // CreateWindowOptions

    function compile_AppWindow(o : AppWindow) : void {
        AppWindow.focus();
        AppWindow.fullscreen();
        var f1 : boolean = AppWindow.isFullscreen();
        AppWindow.minimize();
        var f2 : boolean = AppWindow.isMinimized();
        AppWindow.maximize();
        var f3 : boolean = AppWindow.isMaximized();
        AppWindow.restore();
        AppWindow.moveTo(X.getnumber(), X.getnumber());
        AppWindow.resizeTo(X.getnumber(), X.getnumber());
        AppWindow.drawAttention();
        AppWindow.clearAttention();
        AppWindow.close();
        AppWindow.show();
        AppWindow.hide();
        var f4 : Bounds = AppWindow.getBounds();
        AppWindow.setBounds(X.getBounds());
        AppWindow.setIcon(X.getstring());
        var v1 : Object/*object*/ = o.contentWindow;
    } // AppWindow

    function compile_OutputDeviceInfo(o : OutputDeviceInfo) : void {
        var v1 : string/*DOMString*/ = o.id;
        var v2 : string/*DOMString*/ = o.name;
        var v3 : boolean = o.isActive;
        var v4 : boolean = o.isMuted;
        var v5 : number/*double*/ = o.volume;
    } // OutputDeviceInfo

    function compile_InputDeviceInfo(o : InputDeviceInfo) : void {
        var v1 : string/*DOMString*/ = o.id;
        var v2 : string/*DOMString*/ = o.name;
        var v3 : boolean = o.isActive;
        var v4 : boolean = o.isMuted;
        var v5 : number/*double*/ = o.gain;
    } // InputDeviceInfo

    function compile_DeviceProperties(o : DeviceProperties) : void {
        var v1 : boolean = o.isMuted;
        var v2 : Nullable.<number>/*double?*/ = o.volume;
        var v3 : Nullable.<number>/*double?*/ = o.gain;
    } // DeviceProperties

    function compile_AdapterState(o : AdapterState) : void {
        var v1 : string/*DOMString*/ = o.address;
        var v2 : string/*DOMString*/ = o.name;
        var v3 : boolean = o.powered;
        var v4 : boolean = o.available;
        var v5 : boolean = o.discovering;
    } // AdapterState

    function compile_Device(o : Device) : void {
        var v1 : string/*DOMString*/ = o.address;
        var v2 : Nullable.<string>/*DOMString?*/ = o.name;
        var v3 : Nullable.<boolean> = o.paired;
        var v4 : Nullable.<boolean> = o.connected;
        var v5 : number/*long*/ = o.device;
        var v6 : number/*long*/ = o.vendorId;
        var v7 : number/*long*/ = o.productId;
    } // Device

    function compile_Profile(o : Profile) : void {
        var v1 : string/*DOMString*/ = o.uuid;
        var v2 : Nullable.<string>/*DOMString?*/ = o.name;
        var v3 : Nullable.<number>/*long?*/ = o.channel;
        var v4 : Nullable.<number>/*long?*/ = o.psm;
        var v5 : Nullable.<boolean> = o.requireAuthentication;
        var v6 : Nullable.<boolean> = o.requireAuthorization;
        var v7 : Nullable.<boolean> = o.autoConnect;
        var v8 : Nullable.<number>/*long?*/ = o.version;
        var v9 : Nullable.<number>/*long?*/ = o.features;
    } // Profile

    function compile_ServiceRecord(o : ServiceRecord) : void {
        var v1 : string/*DOMString*/ = o.name;
        var v2 : Nullable.<string>/*DOMString?*/ = o.uuid;
    } // ServiceRecord

    function compile_Socket(o : Socket) : void {
        var v1 : Device = o.device;
        var v2 : Profile = o.profile;
        var v3 : number/*long*/ = o.id;
    } // Socket

    function compile_OutOfBandPairingData(o : OutOfBandPairingData) : void {
        var v1 : ArrayBuffer = o.hash;
        var v2 : ArrayBuffer = o.randomizer;
    } // OutOfBandPairingData

    function compile_GetDevicesOptions(o : GetDevicesOptions) : void {
        var v1 : Nullable.<Profile> = o.profile;
        var v2 : function(device:Device):void/*DeviceCallback*/ = o.deviceCallback;
    } // GetDevicesOptions

    function compile_GetProfilesOptions(o : GetProfilesOptions) : void {
        var v1 : Device = o.device;
    } // GetProfilesOptions

    function compile_GetServicesOptions(o : GetServicesOptions) : void {
        var v1 : string/*DOMString*/ = o.deviceAddress;
    } // GetServicesOptions

    function compile_ConnectOptions(o : ConnectOptions) : void {
        var v1 : Device = o.device;
        var v2 : Profile = o.profile;
    } // ConnectOptions

    function compile_DisconnectOptions(o : DisconnectOptions) : void {
        var v1 : Socket = o.socket;
    } // DisconnectOptions

    function compile_ReadOptions(o : ReadOptions) : void {
        var v1 : Socket = o.socket;
    } // ReadOptions

    function compile_WriteOptions(o : WriteOptions) : void {
        var v1 : Socket = o.socket;
        var v2 : ArrayBuffer = o.data;
    } // WriteOptions

    function compile_SetOutOfBandPairingDataOptions(o : SetOutOfBandPairingDataOptions) : void {
        var v1 : string/*DOMString*/ = o.address;
        var v2 : Nullable.<OutOfBandPairingData> = o.data;
    } // SetOutOfBandPairingDataOptions

    function compile_StartDiscoveryOptions(o : StartDiscoveryOptions) : void {
        var v1 : function(device:Device):void/*DeviceCallback*/ = o.deviceCallback;
    } // StartDiscoveryOptions

    function compile_OnClickData(o : OnClickData) : void {
        var v1 : variant/*(integer or string)*/ = o.menuItemId;
        var v2 : variant/*(integer or string)?*/ = o.parentMenuItemId;
        var v3 : Nullable.<string> = o.mediaType;
        var v4 : Nullable.<string> = o.linkUrl;
        var v5 : Nullable.<string> = o.srcUrl;
        var v6 : Nullable.<string> = o.pageUrl;
        var v7 : Nullable.<string> = o.frameUrl;
        var v8 : Nullable.<string> = o.selectionText;
        var v9 : boolean = o.editable;
        var v10 : Nullable.<boolean> = o.wasChecked;
        var v11 : Nullable.<boolean> = o.checked;
    } // OnClickData

    function compile_CreatePropertiesType(o : CreatePropertiesType) : void {
        var v1 : Nullable.<string> = o.type;
        var v2 : Nullable.<string> = o.id;
        var v3 : Nullable.<string> = o.title;
        var v4 : Nullable.<boolean> = o.checked;
        var v5 : Nullable.<array> = o.contexts;
        var v6 : Nullable.<function(info:OnClickData,tab:Tab):void>/*OnClickDataTabCallback?*/ = o.onclick;
        var v7 : variant/*(integer or string)?*/ = o.parentId;
        var v8 : Nullable.<array> = o.documentUrlPatterns;
        var v9 : Nullable.<array> = o.targetUrlPatterns;
        var v10 : Nullable.<boolean> = o.enabled;
        var v11 : Nullable.<integer> = o.windowId;
        var v12 : Nullable.<integer> = o.index;
        var v13 : Nullable.<string> = o.url;
        var v14 : Nullable.<boolean> = o.active;
        var v15 : Nullable.<boolean> = o.selected;
        var v16 : Nullable.<boolean> = o.pinned;
        var v17 : Nullable.<integer> = o.openerTabId;
    } // CreatePropertiesType

    function compile_UpdatePropertiesType(o : UpdatePropertiesType) : void {
        var v1 : Nullable.<string> = o.type;
        var v2 : Nullable.<string> = o.title;
        var v3 : Nullable.<boolean> = o.checked;
        var v4 : Nullable.<array> = o.contexts;
        var v5 : Nullable.<function():void>/*VoidCallback?*/ = o.onclick;
        var v6 : variant/*(integer or string)?*/ = o.parentId;
        var v7 : Nullable.<array> = o.documentUrlPatterns;
        var v8 : Nullable.<array> = o.targetUrlPatterns;
        var v9 : Nullable.<boolean> = o.enabled;
        var v10 : Nullable.<string> = o.url;
        var v11 : Nullable.<boolean> = o.active;
        var v12 : Nullable.<boolean> = o.highlighted;
        var v13 : Nullable.<boolean> = o.selected;
        var v14 : Nullable.<boolean> = o.pinned;
        var v15 : Nullable.<integer> = o.openerTabId;
    } // UpdatePropertiesType

    function compile_Rule(o : Rule) : void {
        var v1 : Nullable.<string> = o.id;
        var v2 : Nullable.<array> = o.tags;
        var v3 : array = o.conditions;
        var v4 : array = o.actions;
        var v5 : Nullable.<integer> = o.priority;
    } // Rule

    function compile_Event(o : Event) : void {
    } // Event

    function compile_UrlFilter(o : UrlFilter) : void {
        var v1 : Nullable.<string> = o.hostContains;
        var v2 : Nullable.<string> = o.hostEquals;
        var v3 : Nullable.<string> = o.hostPrefix;
        var v4 : Nullable.<string> = o.hostSuffix;
        var v5 : Nullable.<string> = o.pathContains;
        var v6 : Nullable.<string> = o.pathEquals;
        var v7 : Nullable.<string> = o.pathPrefix;
        var v8 : Nullable.<string> = o.pathSuffix;
        var v9 : Nullable.<string> = o.queryContains;
        var v10 : Nullable.<string> = o.queryEquals;
        var v11 : Nullable.<string> = o.queryPrefix;
        var v12 : Nullable.<string> = o.querySuffix;
        var v13 : Nullable.<string> = o.urlContains;
        var v14 : Nullable.<string> = o.urlEquals;
        var v15 : Nullable.<string> = o.urlMatches;
        var v16 : Nullable.<string> = o.originAndPathMatches;
        var v17 : Nullable.<string> = o.urlPrefix;
        var v18 : Nullable.<string> = o.urlSuffix;
        var v19 : Nullable.<array> = o.schemes;
        var v20 : Nullable.<array> = o.ports;
    } // UrlFilter

    function compile_AcceptOption(o : AcceptOption) : void {
        var v1 : Nullable.<string>/*DOMString?*/ = o.description;
        var v2 : Nullable.<string[]>/*DOMString[]?*/ = o.mimeTypes;
        var v3 : Nullable.<string[]>/*DOMString[]?*/ = o.extensions;
    } // AcceptOption

    function compile_ChooseEntryOptions(o : ChooseEntryOptions) : void {
        var v1 : Nullable.<string>/*ChooseEntryType?*/ = o.type;
        var v2 : Nullable.<string>/*DOMString?*/ = o.suggestedName;
        var v3 : Nullable.<AcceptOption[]> = o.accepts;
        var v4 : Nullable.<boolean> = o.acceptsAllTypes;
        var v5 : Nullable.<boolean> = o.acceptsMultiple;
    } // ChooseEntryOptions

    function compile_TokenDetails(o : TokenDetails) : void {
        var v1 : Nullable.<boolean> = o.interactive;
    } // TokenDetails

    function compile_InvalidTokenDetails(o : InvalidTokenDetails) : void {
        var v1 : string/*DOMString*/ = o.token;
    } // InvalidTokenDetails

    function compile_WebAuthFlowDetails(o : WebAuthFlowDetails) : void {
        var v1 : string/*DOMString*/ = o.url;
        var v2 : Nullable.<boolean> = o.interactive;
    } // WebAuthFlowDetails

    function compile_Coordinates(o : Coordinates) : void {
        var v1 : number/*double*/ = o.latitude;
        var v2 : number/*double*/ = o.longitude;
        var v3 : Nullable.<number>/*double?*/ = o.altitude;
        var v4 : number/*double*/ = o.accuracy;
        var v5 : Nullable.<number>/*double?*/ = o.altitudeAccuracy;
        var v6 : Nullable.<number>/*double?*/ = o.heading;
        var v7 : Nullable.<number>/*double?*/ = o.speed;
    } // Coordinates

    function compile_Location(o : Location) : void {
        var v1 : string/*DOMString*/ = o.name;
        var v2 : Coordinates = o.coords;
        var v3 : number/*double*/ = o.timestamp;
    } // Location

    function compile_WatchLocationRequestInfo(o : WatchLocationRequestInfo) : void {
        var v1 : Nullable.<number>/*double?*/ = o.minDistanceInMeters;
        var v2 : Nullable.<number>/*double?*/ = o.minTimeInMilliseconds;
        var v3 : Nullable.<number>/*long?*/ = o.maximumAge;
    } // WatchLocationRequestInfo

    function compile_MediaFileSystemsDetails(o : MediaFileSystemsDetails) : void {
        var v1 : Nullable.<GetMediaFileSystemsInteractivity> = o.interactive;
    } // MediaFileSystemsDetails

    function compile_MediaFileSystemMetadata(o : MediaFileSystemMetadata) : void {
        var v1 : string/*DOMString*/ = o.name;
        var v2 : string/*DOMString*/ = o.galleryId;
        var v3 : Nullable.<string>/*DOMString?*/ = o.deviceId;
        var v4 : boolean = o.isRemovable;
        var v5 : boolean = o.isMediaDevice;
    } // MediaFileSystemMetadata

    function compile_NotificationItem(o : NotificationItem) : void {
        var v1 : string/*DOMString*/ = o.title;
        var v2 : string/*DOMString*/ = o.message;
    } // NotificationItem

    function compile_NotificationBitmap(o : NotificationBitmap) : void {
        var v1 : number/*long*/ = o.width;
        var v2 : number/*long*/ = o.height;
        var v3 : Nullable.<ArrayBuffer> = o.data;
    } // NotificationBitmap

    function compile_NotificationButton(o : NotificationButton) : void {
        var v1 : string/*DOMString*/ = o.title;
        var v2 : Nullable.<string>/*DOMString?*/ = o.iconUrl;
        var v3 : Nullable.<NotificationBitmap> = o.iconBitmap;
    } // NotificationButton

    function compile_NotificationOptions(o : NotificationOptions) : void {
        var v1 : Nullable.<TemplateType> = o.type;
        var v2 : Nullable.<string>/*DOMString?*/ = o.iconUrl;
        var v3 : Nullable.<NotificationBitmap> = o.iconBitmap;
        var v4 : Nullable.<string>/*DOMString?*/ = o.title;
        var v5 : Nullable.<string>/*DOMString?*/ = o.message;
        var v6 : Nullable.<string>/*DOMString?*/ = o.contextMessage;
        var v7 : Nullable.<number>/*long?*/ = o.priority;
        var v8 : Nullable.<number>/*double?*/ = o.eventTime;
        var v9 : Nullable.<NotificationButton[]> = o.buttons;
        var v10 : Nullable.<string>/*DOMString?*/ = o.expandedMessage;
        var v11 : Nullable.<string>/*DOMString?*/ = o.imageUrl;
        var v12 : Nullable.<NotificationBitmap> = o.imageBitmap;
        var v13 : Nullable.<NotificationItem[]> = o.items;
        var v14 : Nullable.<number>/*long?*/ = o.progress;
    } // NotificationOptions

    function compile_Permissions(o : Permissions) : void {
        var v1 : Nullable.<array> = o.permissions;
        var v2 : Nullable.<array> = o.origins;
    } // Permissions

    function compile_Message(o : Message) : void {
        var v1 : number/*long*/ = o.subchannelId;
        var v2 : string/*DOMString*/ = o.payload;
    } // Message

    function compile_ChannelIdResult(o : ChannelIdResult) : void {
        var v1 : string/*DOMString*/ = o.channelId;
    } // ChannelIdResult

    function compile_Port(o : Port) : void {
        var v1 : string = o.name;
        var v2 : function():void/*VoidCallback*/ = o.disconnect;
        var v3 : Event = o.onDisconnect;
        var v4 : Event = o.onMessage;
        var v5 : function():void/*VoidCallback*/ = o.postMessage;
        var v6 : Nullable.<MessageSender> = o.sender;
    } // Port

    function compile_MessageSender(o : MessageSender) : void {
        var v1 : Nullable.<Tab> = o.tab;
        var v2 : Nullable.<string> = o.id;
        var v3 : Nullable.<string> = o.url;
    } // MessageSender

    function compile_ConnectInfoType(o : ConnectInfoType) : void {
        var v1 : Nullable.<string> = o.name;
    } // ConnectInfoType

    function compile_MessageType(o : MessageType) : void {
    } // MessageType

    function compile_DetailsType(o : DetailsType) : void {
        var v1 : string = o.version;
    } // DetailsType

    function compile_OpenOptions(o : OpenOptions) : void {
        var v1 : Nullable.<number>/*long?*/ = o.bitrate;
        var v2 : Nullable.<string>/*DataBit?*/ = o.dataBit;
        var v3 : Nullable.<string>/*ParityBit?*/ = o.parityBit;
        var v4 : Nullable.<string>/*StopBit?*/ = o.stopBit;
    } // OpenOptions

    function compile_OpenInfo(o : OpenInfo) : void {
        var v1 : number/*long*/ = o.connectionId;
    } // OpenInfo

    function compile_ReadInfo(o : ReadInfo) : void {
        var v1 : number/*long*/ = o.bytesRead;
        var v2 : ArrayBuffer = o.data;
        var v3 : number/*long*/ = o.resultCode;
    } // ReadInfo

    function compile_WriteInfo(o : WriteInfo) : void {
        var v1 : number/*long*/ = o.bytesWritten;
    } // WriteInfo

    function compile_ControlSignalOptions(o : ControlSignalOptions) : void {
        var v1 : Nullable.<boolean> = o.dtr;
        var v2 : Nullable.<boolean> = o.rts;
        var v3 : Nullable.<boolean> = o.dcd;
        var v4 : Nullable.<boolean> = o.cts;
    } // ControlSignalOptions

    function compile_CreateOptions(o : CreateOptions) : void {
    } // CreateOptions

    function compile_CreateInfo(o : CreateInfo) : void {
        var v1 : number/*long*/ = o.socketId;
    } // CreateInfo

    function compile_AcceptInfo(o : AcceptInfo) : void {
        var v1 : number/*long*/ = o.resultCode;
        var v2 : Nullable.<number>/*long?*/ = o.socketId;
    } // AcceptInfo

    function compile_RecvFromInfo(o : RecvFromInfo) : void {
        var v1 : number/*long*/ = o.resultCode;
        var v2 : ArrayBuffer = o.data;
        var v3 : string/*DOMString*/ = o.address;
        var v4 : number/*long*/ = o.port;
    } // RecvFromInfo

    function compile_SocketInfo(o : SocketInfo) : void {
        var v1 : string/*SocketType*/ = o.socketType;
        var v2 : boolean = o.connected;
        var v3 : Nullable.<string>/*DOMString?*/ = o.peerAddress;
        var v4 : Nullable.<number>/*long?*/ = o.peerPort;
        var v5 : Nullable.<string>/*DOMString?*/ = o.localAddress;
        var v6 : Nullable.<number>/*long?*/ = o.localPort;
        var v7 : number/*long*/ = o.socketId;
        var v8 : boolean = o.persistent;
        var v9 : Nullable.<string>/*DOMString?*/ = o.name;
        var v10 : Nullable.<number>/*long?*/ = o.bufferSize;
    } // SocketInfo

    function compile_NetworkInterface(o : NetworkInterface) : void {
        var v1 : string/*DOMString*/ = o.name;
        var v2 : string/*DOMString*/ = o.address;
    } // NetworkInterface

    function compile_SocketProperties(o : SocketProperties) : void {
        var v1 : Nullable.<boolean> = o.persistent;
        var v2 : Nullable.<string>/*DOMString?*/ = o.name;
        var v3 : Nullable.<number>/*long?*/ = o.bufferSize;
    } // SocketProperties

    function compile_SendInfo(o : SendInfo) : void {
        var v1 : number/*long*/ = o.result;
        var v2 : Nullable.<number>/*long?*/ = o.bytesWritten;
    } // SendInfo

    function compile_ReceiveInfo(o : ReceiveInfo) : void {
        var v1 : number/*long*/ = o.socketId;
        var v2 : ArrayBuffer = o.data;
        var v3 : string/*DOMString*/ = o.remoteAddress;
        var v4 : number/*long*/ = o.remotePort;
    } // ReceiveInfo

    function compile_ReceiveErrorInfo(o : ReceiveErrorInfo) : void {
        var v1 : number/*long*/ = o.socketId;
        var v2 : number/*long*/ = o.result;
    } // ReceiveErrorInfo

    function compile_StorageChange(o : StorageChange) : void {
        var v1 : variant/*any?*/ = o.oldValue;
        var v2 : variant/*any?*/ = o.newValue;
    } // StorageChange

    function compile_StorageArea(o : StorageArea) : void {
    } // StorageArea

    function compile_ChangesType(o : ChangesType) : void {
    } // ChangesType

    function compile_FileInfo(o : FileInfo) : void {
        var v1 : Object/*object*/ = o.fileEntry;
        var v2 : string/*FileStatus*/ = o.status;
        var v3 : Nullable.<string>/*SyncAction?*/ = o.action;
        var v4 : Nullable.<string>/*SyncDirection?*/ = o.direction;
    } // FileInfo

    function compile_FileStatusInfo(o : FileStatusInfo) : void {
        var v1 : Object/*object*/ = o.fileEntry;
        var v2 : string/*FileStatus*/ = o.status;
        var v3 : Nullable.<string>/*DOMString?*/ = o.error;
    } // FileStatusInfo

    function compile_StorageInfo(o : StorageInfo) : void {
        var v1 : number/*long*/ = o.usageBytes;
        var v2 : number/*long*/ = o.quotaBytes;
    } // StorageInfo

    function compile_ServiceInfo(o : ServiceInfo) : void {
        var v1 : string/*ServiceStatus*/ = o.state;
        var v2 : string/*DOMString*/ = o.description;
    } // ServiceInfo

    function compile_CpuInfo(o : CpuInfo) : void {
        var v1 : number/*long*/ = o.numOfProcessors;
        var v2 : string/*DOMString*/ = o.archName;
        var v3 : string/*DOMString*/ = o.modelName;
    } // CpuInfo

    function compile_Insets(o : Insets) : void {
        var v1 : number/*long*/ = o.left;
        var v2 : number/*long*/ = o.top;
        var v3 : number/*long*/ = o.right;
        var v4 : number/*long*/ = o.bottom;
    } // Insets

    function compile_DisplayUnitInfo(o : DisplayUnitInfo) : void {
        var v1 : string/*DOMString*/ = o.id;
        var v2 : string/*DOMString*/ = o.name;
        var v3 : string/*DOMString*/ = o.mirroringSourceId;
        var v4 : boolean = o.isPrimary;
        var v5 : boolean = o.isInternal;
        var v6 : boolean = o.isEnabled;
        var v7 : number/*double*/ = o.dpiX;
        var v8 : number/*double*/ = o.dpiY;
        var v9 : number/*long*/ = o.rotation;
        var v10 : Bounds = o.bounds;
        var v11 : Insets = o.overscan;
        var v12 : Bounds = o.workArea;
    } // DisplayUnitInfo

    function compile_DisplayProperties(o : DisplayProperties) : void {
        var v1 : Nullable.<string>/*DOMString?*/ = o.mirroringSourceId;
        var v2 : Nullable.<boolean> = o.isPrimary;
        var v3 : Nullable.<Insets> = o.overscan;
        var v4 : Nullable.<number>/*long?*/ = o.rotation;
        var v5 : Nullable.<number>/*long?*/ = o.boundsOriginX;
        var v6 : Nullable.<number>/*long?*/ = o.boundsOriginY;
    } // DisplayProperties

    function compile_MemoryInfo(o : MemoryInfo) : void {
        var v1 : number/*double*/ = o.capacity;
        var v2 : number/*double*/ = o.availableCapacity;
    } // MemoryInfo

    function compile_StorageUnitInfo(o : StorageUnitInfo) : void {
        var v1 : string/*DOMString*/ = o.id;
        var v2 : string/*DOMString*/ = o.name;
        var v3 : string/*StorageUnitType*/ = o.type;
        var v4 : number/*double*/ = o.capacity;
    } // StorageUnitInfo

    function compile_TtsEvent(o : TtsEvent) : void {
        var v1 : string = o.type;
        var v2 : Nullable.<number> = o.charIndex;
        var v3 : Nullable.<string> = o.errorMessage;
        var v4 : Nullable.<number> = o.srcId;
        var v5 : Nullable.<boolean> = o.isFinalEvent;
    } // TtsEvent

    function compile_TtsVoice(o : TtsVoice) : void {
        var v1 : Nullable.<string> = o.voiceName;
        var v2 : Nullable.<string> = o.lang;
        var v3 : Nullable.<string> = o.gender;
        var v4 : Nullable.<string> = o.extensionId;
        var v5 : Nullable.<array> = o.eventTypes;
    } // TtsVoice

    function compile_OptionsType(o : OptionsType) : void {
        var v1 : Nullable.<boolean> = o.enqueue;
        var v2 : Nullable.<string> = o.voiceName;
        var v3 : Nullable.<string> = o.extensionId;
        var v4 : Nullable.<string> = o.lang;
        var v5 : Nullable.<string> = o.gender;
        var v6 : Nullable.<number> = o.rate;
        var v7 : Nullable.<number> = o.pitch;
        var v8 : Nullable.<number> = o.volume;
        var v9 : Nullable.<array> = o.requiredEventTypes;
        var v10 : Nullable.<array> = o.desiredEventTypes;
        var v11 : Nullable.<function(event:TtsEvent):void>/*TtsEventCallback?*/ = o.onEvent;
        var v12 : Nullable.<string> = o.format;
        var v13 : Nullable.<integer> = o.quality;
    } // OptionsType

    function compile_ChromeSetting(o : ChromeSetting) : void {
    } // ChromeSetting

    function compile_ConnectionHandle(o : ConnectionHandle) : void {
        var v1 : number/*long*/ = o.handle;
        var v2 : number/*long*/ = o.vendorId;
        var v3 : number/*long*/ = o.productId;
    } // ConnectionHandle

    function compile_EndpointDescriptor(o : EndpointDescriptor) : void {
        var v1 : number/*long*/ = o.address;
        var v2 : string/*TransferType*/ = o.type;
        var v3 : string/*Direction*/ = o.direction;
        var v4 : number/*long*/ = o.maximumPacketSize;
        var v5 : Nullable.<string>/*SynchronizationType?*/ = o.synchronization;
        var v6 : Nullable.<string>/*UsageType?*/ = o.usage;
        var v7 : Nullable.<number>/*long?*/ = o.pollingInterval;
    } // EndpointDescriptor

    function compile_InterfaceDescriptor(o : InterfaceDescriptor) : void {
        var v1 : number/*long*/ = o.interfaceNumber;
        var v2 : number/*long*/ = o.alternateSetting;
        var v3 : number/*long*/ = o.interfaceClass;
        var v4 : number/*long*/ = o.interfaceSubclass;
        var v5 : number/*long*/ = o.interfaceProtocol;
        var v6 : Nullable.<string>/*DOMString?*/ = o.description;
        var v7 : EndpointDescriptor[] = o.endpoints;
    } // InterfaceDescriptor

    function compile_ControlTransferInfo(o : ControlTransferInfo) : void {
        var v1 : string/*Direction*/ = o.direction;
        var v2 : string/*Recipient*/ = o.recipient;
        var v3 : string/*RequestType*/ = o.requestType;
        var v4 : number/*long*/ = o.request;
        var v5 : number/*long*/ = o.value;
        var v6 : number/*long*/ = o.index;
        var v7 : Nullable.<number>/*long?*/ = o.length;
        var v8 : Nullable.<ArrayBuffer> = o.data;
    } // ControlTransferInfo

    function compile_GenericTransferInfo(o : GenericTransferInfo) : void {
        var v1 : string/*Direction*/ = o.direction;
        var v2 : number/*long*/ = o.endpoint;
        var v3 : Nullable.<number>/*long?*/ = o.length;
        var v4 : Nullable.<ArrayBuffer> = o.data;
    } // GenericTransferInfo

    function compile_IsochronousTransferInfo(o : IsochronousTransferInfo) : void {
        var v1 : GenericTransferInfo = o.transferInfo;
        var v2 : number/*long*/ = o.packets;
        var v3 : number/*long*/ = o.packetLength;
    } // IsochronousTransferInfo

    function compile_TransferResultInfo(o : TransferResultInfo) : void {
        var v1 : Nullable.<number>/*long?*/ = o.resultCode;
        var v2 : Nullable.<ArrayBuffer> = o.data;
    } // TransferResultInfo

    function compile_EnumerateDevicesOptions(o : EnumerateDevicesOptions) : void {
        var v1 : number/*long*/ = o.vendorId;
        var v2 : number/*long*/ = o.productId;
    } // EnumerateDevicesOptions

    function compile_EnumerateDevicesAndRequestAccessOptions(o : EnumerateDevicesAndRequestAccessOptions) : void {
        var v1 : number/*long*/ = o.vendorId;
        var v2 : number/*long*/ = o.productId;
        var v3 : Nullable.<number>/*long?*/ = o.interfaceId;
    } // EnumerateDevicesAndRequestAccessOptions

    function compile_Tab(o : Tab) : void {
        var v1 : Nullable.<integer> = o.id;
        var v2 : integer = o.index;
        var v3 : integer = o.windowId;
        var v4 : Nullable.<integer> = o.openerTabId;
        var v5 : boolean = o.selected;
        var v6 : boolean = o.highlighted;
        var v7 : boolean = o.active;
        var v8 : boolean = o.pinned;
        var v9 : Nullable.<string> = o.url;
        var v10 : Nullable.<string> = o.title;
        var v11 : Nullable.<string> = o.favIconUrl;
        var v12 : Nullable.<string> = o.status;
        var v13 : boolean = o.incognito;
        var v14 : Nullable.<integer> = o.width;
        var v15 : Nullable.<integer> = o.height;
        var v16 : Nullable.<string> = o.sessionId;
    } // Tab

    function compile_InjectDetails(o : InjectDetails) : void {
        var v1 : Nullable.<string> = o.code;
        var v2 : Nullable.<string> = o.file;
        var v3 : Nullable.<boolean> = o.allFrames;
        var v4 : Nullable.<string> = o.runAt;
    } // InjectDetails

    function compile_QueryInfoType(o : QueryInfoType) : void {
        var v1 : Nullable.<boolean> = o.active;
        var v2 : Nullable.<boolean> = o.pinned;
        var v3 : Nullable.<boolean> = o.highlighted;
        var v4 : Nullable.<boolean> = o.currentWindow;
        var v5 : Nullable.<boolean> = o.lastFocusedWindow;
        var v6 : Nullable.<string> = o.status;
        var v7 : Nullable.<string> = o.title;
        var v8 : Nullable.<string> = o.url;
        var v9 : Nullable.<integer> = o.windowId;
        var v10 : Nullable.<string> = o.windowType;
        var v11 : Nullable.<integer> = o.index;
    } // QueryInfoType

    function compile_HighlightInfoType(o : HighlightInfoType) : void {
        var v1 : integer = o.windowId;
        var v2 : array = o.tabIds;
    } // HighlightInfoType

    function compile_MovePropertiesType(o : MovePropertiesType) : void {
        var v1 : Nullable.<integer> = o.windowId;
        var v2 : integer = o.index;
    } // MovePropertiesType

    function compile_ReloadPropertiesType(o : ReloadPropertiesType) : void {
        var v1 : Nullable.<boolean> = o.bypassCache;
    } // ReloadPropertiesType

    function compile_ChangeInfoType(o : ChangeInfoType) : void {
        var v1 : Nullable.<string> = o.status;
        var v2 : Nullable.<string> = o.url;
        var v3 : Nullable.<boolean> = o.pinned;
        var v4 : Nullable.<string> = o.favIconUrl;
    } // ChangeInfoType

    function compile_MoveInfoType(o : MoveInfoType) : void {
        var v1 : integer = o.windowId;
        var v2 : integer = o.fromIndex;
        var v3 : integer = o.toIndex;
    } // MoveInfoType

    function compile_SelectInfoType(o : SelectInfoType) : void {
        var v1 : integer = o.windowId;
        var v2 : array = o.tabIds;
    } // SelectInfoType

    function compile_ActiveInfoType(o : ActiveInfoType) : void {
        var v1 : integer = o.tabId;
        var v2 : integer = o.windowId;
    } // ActiveInfoType

    function compile_DetachInfoType(o : DetachInfoType) : void {
        var v1 : integer = o.oldWindowId;
        var v2 : integer = o.oldPosition;
    } // DetachInfoType

    function compile_AttachInfoType(o : AttachInfoType) : void {
        var v1 : integer = o.newWindowId;
        var v2 : integer = o.newPosition;
    } // AttachInfoType

    function compile_RemoveInfoType(o : RemoveInfoType) : void {
        var v1 : integer = o.windowId;
        var v2 : boolean = o.isWindowClosing;
    } // RemoveInfoType


    function test_compile() : void {
        this.expect(true).toBe(true);
    }

}

native class X {
    static function getAdapterState() : AdapterState;
    static function getAlarm() : Alarm;
    static function getAlarmCreateInfo() : AlarmCreateInfo;
    static function getAppWindow() : AppWindow;
    static function getArrayBuffer() : ArrayBuffer;
    static function getBounds() : Bounds;
    static function getChooseEntryOptions() : ChooseEntryOptions;
    static function getConnectOptions() : ConnectOptions;
    static function getConnectionHandle() : ConnectionHandle;
    static function getControlSignalOptions() : ControlSignalOptions;
    static function getControlTransferInfo() : ControlTransferInfo;
    static function getCoordinates() : Coordinates;
    static function getCreateOptions() : CreateOptions;
    static function getCreateWindowOptions() : CreateWindowOptions;
    static function getDevice() : Device;
    static function getDeviceProperties() : DeviceProperties;
    static function getDisconnectOptions() : DisconnectOptions;
    static function getDisplayProperties() : DisplayProperties;
    static function getEndpointDescriptor__() : EndpointDescriptor[];
    static function getEnumerateDevicesAndRequestAccessOptions() : EnumerateDevicesAndRequestAccessOptions;
    static function getEnumerateDevicesOptions() : EnumerateDevicesOptions;
    static function getEvent() : Event;
    static function getFileInfo() : FileInfo;
    static function getGenericTransferInfo() : GenericTransferInfo;
    static function getGetDevicesOptions() : GetDevicesOptions;
    static function getGetProfilesOptions() : GetProfilesOptions;
    static function getGetServicesOptions() : GetServicesOptions;
    static function getInsets() : Insets;
    static function getInvalidTokenDetails() : InvalidTokenDetails;
    static function getIsochronousTransferInfo() : IsochronousTransferInfo;
    static function getLaunchData() : LaunchData;
    static function getLevel() : Level;
    static function getLocation() : Location;
    static function getMediaFileSystemMetadata() : MediaFileSystemMetadata;
    static function getMediaFileSystemsDetails() : MediaFileSystemsDetails;
    static function getMessage() : Message;
    static function getMessageSender() : MessageSender;
    static function getNotificationOptions() : NotificationOptions;
    static function getNullable__AcceptOption___() : Nullable.<AcceptOption[]>;
    static function getNullable__ArrayBuffer_() : Nullable.<ArrayBuffer>;
    static function getNullable__Bounds_() : Nullable.<Bounds>;
    static function getNullable__GetMediaFileSystemsInteractivity_() : Nullable.<GetMediaFileSystemsInteractivity>;
    static function getNullable__Insets_() : Nullable.<Insets>;
    static function getNullable__LaunchItem___() : Nullable.<LaunchItem[]>;
    static function getNullable__MessageSender_() : Nullable.<MessageSender>;
    static function getNullable__NotificationBitmap_() : Nullable.<NotificationBitmap>;
    static function getNullable__NotificationButton___() : Nullable.<NotificationButton[]>;
    static function getNullable__NotificationItem___() : Nullable.<NotificationItem[]>;
    static function getNullable__OutOfBandPairingData_() : Nullable.<OutOfBandPairingData>;
    static function getNullable__Profile_() : Nullable.<Profile>;
    static function getNullable__Tab_() : Nullable.<Tab>;
    static function getNullable__TemplateType_() : Nullable.<TemplateType>;
    static function getNullable__WindowType_() : Nullable.<WindowType>;
    static function getNullable__array_() : Nullable.<array>;
    static function getNullable__boolean_() : Nullable.<boolean>;
    static function getNullable__function___void_() : Nullable.<function():void>;
    static function getNullable__function_event_TtsEvent__void_() : Nullable.<function(event:TtsEvent):void>;
    static function getNullable__function_info_OnClickData_tab_Tab__void_() : Nullable.<function(info:OnClickData,tab:Tab):void>;
    static function getNullable__integer_() : Nullable.<integer>;
    static function getNullable__number_() : Nullable.<number>;
    static function getNullable__string_() : Nullable.<string>;
    static function getNullable__string___() : Nullable.<string[]>;
    static function getObject() : Object;
    static function getObject__() : Object[];
    static function getOnClickData() : OnClickData;
    static function getOpenOptions() : OpenOptions;
    static function getPermissions() : Permissions;
    static function getPort() : Port;
    static function getProfile() : Profile;
    static function getReadOptions() : ReadOptions;
    static function getReceiveErrorInfo() : ReceiveErrorInfo;
    static function getReceiveInfo() : ReceiveInfo;
    static function getServiceInfo() : ServiceInfo;
    static function getSetOutOfBandPairingDataOptions() : SetOutOfBandPairingDataOptions;
    static function getSocket() : Socket;
    static function getSocketProperties() : SocketProperties;
    static function getStartDiscoveryOptions() : StartDiscoveryOptions;
    static function getStorageUnitInfo() : StorageUnitInfo;
    static function getTab() : Tab;
    static function getTokenDetails() : TokenDetails;
    static function getTtsEvent() : TtsEvent;
    static function getWatchLocationRequestInfo() : WatchLocationRequestInfo;
    static function getWebAuthFlowDetails() : WebAuthFlowDetails;
    static function getWriteOptions() : WriteOptions;
    static function getarray() : array;
    static function getboolean() : boolean;
    static function getfunction___void() : function():void;
    static function getfunction_acceptInfo_AcceptInfo__void() : function(acceptInfo:AcceptInfo):void;
    static function getfunction_alarm_Alarm__void() : function(alarm:Alarm):void;
    static function getfunction_alarms_Alarm____void() : function(alarms:Alarm[]):void;
    static function getfunction_channelId_ChannelIdResult__void() : function(channelId:ChannelIdResult):void;
    static function getfunction_created_window_Object__void() : function(created_window:Object):void;
    static function getfunction_data_OutOfBandPairingData__void() : function(data:OutOfBandPairingData):void;
    static function getfunction_descriptors_InterfaceDescriptor____void() : function(descriptors:InterfaceDescriptor[]):void;
    static function getfunction_device_Device__void() : function(device:Device):void;
    static function getfunction_devices_Device____void() : function(devices:Device[]):void;
    static function getfunction_directoryEntry_Object__void() : function(directoryEntry:Object):void;
    static function getfunction_displayInfo_DisplayUnitInfo____void() : function(displayInfo:DisplayUnitInfo[]):void;
    static function getfunction_displayPath_string__void() : function(displayPath:string):void;
    static function getfunction_entry_Object__void() : function(entry:Object):void;
    static function getfunction_entry_Object_fileEntries_Object____void() : function(entry:Object,fileEntries:Object[]):void;
    static function getfunction_fileSystem_Object__void() : function(fileSystem:Object):void;
    static function getfunction_groups_string____void() : function(groups:string[]):void;
    static function getfunction_handle_ConnectionHandle__void() : function(handle:ConnectionHandle):void;
    static function getfunction_handles_ConnectionHandle____void() : function(handles:ConnectionHandle[]):void;
    static function getfunction_info_CpuInfo__void() : function(info:CpuInfo):void;
    static function getfunction_info_MemoryInfo__void() : function(info:MemoryInfo):void;
    static function getfunction_info_StorageInfo__void() : function(info:StorageInfo):void;
    static function getfunction_info_StorageUnitInfo____void() : function(info:StorageUnitInfo[]):void;
    static function getfunction_info_TransferResultInfo__void() : function(info:TransferResultInfo):void;
    static function getfunction_isRestorable_boolean__void() : function(isRestorable:boolean):void;
    static function getfunction_isWritable_boolean__void() : function(isWritable:boolean):void;
    static function getfunction_languages_array__void() : function(languages:array):void;
    static function getfunction_mediaFileSystems_Object____void() : function(mediaFileSystems:Object[]):void;
    static function getfunction_newState_string__void() : function(newState:string):void;
    static function getfunction_notificationId_string__void() : function(notificationId:string):void;
    static function getfunction_notifications_Object__void() : function(notifications:Object):void;
    static function getfunction_openInfo_OpenInfo__void() : function(openInfo:OpenInfo):void;
    static function getfunction_options_ControlSignalOptions__void() : function(options:ControlSignalOptions):void;
    static function getfunction_outputInfo_OutputDeviceInfo___inputInfo_InputDeviceInfo____void() : function(outputInfo:OutputDeviceInfo[],inputInfo:InputDeviceInfo[]):void;
    static function getfunction_permissions_Permissions__void() : function(permissions:Permissions):void;
    static function getfunction_policy_string__void() : function(policy:string):void;
    static function getfunction_ports_string____void() : function(ports:string[]):void;
    static function getfunction_readInfo_ReadInfo__void() : function(readInfo:ReadInfo):void;
    static function getfunction_recvFromInfo_RecvFromInfo__void() : function(recvFromInfo:RecvFromInfo):void;
    static function getfunction_removed_boolean__void() : function(removed:boolean):void;
    static function getfunction_responseUrl_string__void() : function(responseUrl:string):void;
    static function getfunction_response_variant__void() : function(response:variant):void;
    static function getfunction_result_AdapterState__void() : function(result:AdapterState):void;
    static function getfunction_result_ArrayBuffer__void() : function(result:ArrayBuffer):void;
    static function getfunction_result_EjectDeviceResultCode__void() : function(result:EjectDeviceResultCode):void;
    static function getfunction_result_NetworkInterface____void() : function(result:NetworkInterface[]):void;
    static function getfunction_result_Profile____void() : function(result:Profile[]):void;
    static function getfunction_result_ServiceRecord____void() : function(result:ServiceRecord[]):void;
    static function getfunction_result_boolean__void() : function(result:boolean):void;
    static function getfunction_result_number__void() : function(result:number):void;
    static function getfunction_sendInfo_SendInfo__void() : function(sendInfo:SendInfo):void;
    static function getfunction_socketInfos_SocketInfo____void() : function(socketInfos:SocketInfo[]):void;
    static function getfunction_status_FileStatusInfo____void() : function(status:FileStatusInfo[]):void;
    static function getfunction_status_string__void() : function(status:string):void;
    static function getfunction_status_string_details_Object__void() : function(status:string,details:Object):void;
    static function getfunction_sucess_boolean__void() : function(sucess:boolean):void;
    static function getfunction_token_string__void() : function(token:string):void;
    static function getfunction_wasCleared_boolean__void() : function(wasCleared:boolean):void;
    static function getfunction_wasUpdated_boolean__void() : function(wasUpdated:boolean):void;
    static function getfunction_writeInfo_WriteInfo__void() : function(writeInfo:WriteInfo):void;
    static function getinteger() : integer;
    static function getnumber() : number;
    static function getoptional() : optional;
    static function getstring() : string;
    static function getstring__() : string[];
    static function getvariant() : variant;
}

